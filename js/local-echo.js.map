{"version":3,"sources":["webpack://LocalEchoController/webpack/bootstrap","webpack://LocalEchoController/./index.js","webpack://LocalEchoController/./lib/HistoryController.js","webpack://LocalEchoController/./lib/LocalEchoController.js","webpack://LocalEchoController/./lib/Utils.js","webpack://LocalEchoController/./node_modules/shell-quote/index.js"],"names":["LocalEchoController","HistoryController","size","entries","cursor","entry","trim","lastEntry","length","push","pop","idx","Math","max","min","term","options","_handleTermData","handleTermData","bind","_handleTermResize","handleTermResize","history","historySize","maxAutocompleteEntries","_autocompleteHandlers","_active","_input","_cursor","_activePrompt","_activeCharPrompt","_termSize","cols","rows","_disposables","loadAddon","attach","detach","off","forEach","d","dispose","on","onData","onResize","fn","args","findIndex","e","splice","prompt","continuationPrompt","Promise","resolve","reject","write","reason","message","print","normInput","replace","items","padding","println","itemWidth","reduce","width","item","wideCols","floor","wideRows","ceil","i","row","rowStr","col","repeat","input","offset","newInput","applyPrompts","substr","currentPrompt","allRows","countLines","promptCursor","applyPromptOffset","offsetToColRow","moveRows","clearInput","newPrompt","newCursor","newLines","moveUpRows","callback","setCursor","resume","setInput","ret","then","inputWithPrompt","inputLines","prevPromptOffset","prevCol","prevRow","newPromptOffset","newCol","newRow","dir","num","backspace","data","charCodeAt","normData","Array","from","c","handleData","ord","ofs","value","getPrevious","getNext","handleCursorMove","handleCursorErase","closestLeftBoundary","closestRightBoundary","isIncompleteInput","handleCursorInsert","handleReadComplete","inputFragment","hasTailingSpace","hasTailingWhitespace","candidates","collectAutocompleteCandidates","sort","lastToken","getLastToken","sameFragment","getSharedFragment","printAndRestartPrompt","printWide","readChar","yn","rewind","wordBoundaries","leftSide","match","words","rx","exec","index","found","reverse","find","x","maxCols","chr","charAt","split","endsWith","tokens","parse","callbacks","expr","all","concat","console","error","filter","txt","startsWith","fragment","oldFragment","slice","exports","quote","xs","map","s","op","test","String","join","CONTROL","META","BAREWORD","SINGLE_QUOTE","DOUBLE_QUOTE","TOKEN","pow","random","toString","env","opts","mapped","acc","RegExp","Boolean","JSON","chunker","commented","j","SQ","DQ","DS","BS","escape","esc","out","isGlob","len","parseEnvVar","comment","pattern","varend","varname","Error","indexOf","getVar","prev","arg","undefined","_","pre","key","r","stringify"],"mappings":"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","file":"local-echo.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.js\");\n","import LocalEchoController from \"./lib/LocalEchoController\";\nexport { HistoryController } from './lib/HistoryController';\n\nexport default LocalEchoController;\n","/**\n * The history controller provides an ring-buffer\n */\nexport class HistoryController {\n  constructor(size) {\n    this.size = size;\n    this.entries = [];\n    this.cursor = 0;\n  }\n\n  /**\n   * Push an entry and maintain ring buffer size\n   */\n  push(entry) {\n    // Skip empty entries\n    if (entry.trim() === \"\") return;\n    // Skip duplicate entries\n    const lastEntry = this.entries[this.entries.length - 1];\n    if (entry == lastEntry) return;\n    // Keep track of entries\n    this.entries.push(entry);\n    if (this.entries.length > this.size) {\n      this.entries.pop(0);\n    }\n    this.cursor = this.entries.length;\n  }\n\n  /**\n   * Rewind history cursor on the last entry\n   */\n  rewind() {\n    this.cursor = this.entries.length;\n  }\n\n  /**\n   * Returns the previous entry\n   */\n  getPrevious() {\n    const idx = Math.max(0, this.cursor - 1);\n    this.cursor = idx;\n    return this.entries[idx];\n  }\n\n  /**\n   * Returns the next entry\n   */\n  getNext() {\n    const idx = Math.min(this.entries.length, this.cursor + 1);\n    this.cursor = idx;\n    return this.entries[idx];\n  }\n}\n","import { HistoryController } from \"./HistoryController\";\nimport {\n  closestLeftBoundary,\n  closestRightBoundary,\n  collectAutocompleteCandidates,\n  countLines,\n  getLastToken,\n  hasTailingWhitespace,\n  isIncompleteInput,\n  offsetToColRow,\n  getSharedFragment\n} from \"./Utils\";\n\n/**\n * A local terminal controller is responsible for displaying messages\n * and handling local echo for the terminal.\n *\n * Local echo supports most of bash-like input primitives. Namely:\n * - Arrow navigation on the input\n * - Alt-arrow for word-boundary navigation\n * - Alt-backspace for word-boundary deletion\n * - Multi-line input for incomplete commands\n * - Auto-complete hooks\n */\nexport default class LocalEchoController {\n  constructor(term = null, options = {}) {\n    this.term = term;\n    this._handleTermData = this.handleTermData.bind(this);\n    this._handleTermResize = this.handleTermResize.bind(this)\n    \n    this.history = new HistoryController(options.historySize || 10);\n    this.maxAutocompleteEntries = options.maxAutocompleteEntries || 100;\n\n    this._autocompleteHandlers = [];\n    this._active = false;\n    this._input = \"\";\n    this._cursor = 0;\n    this._activePrompt = null;\n    this._activeCharPrompt = null;\n    this._termSize = {\n      cols: 0,\n      rows: 0,\n    };\n\n    this._disposables = [];\n    \n    if (term) {\n      if (term.loadAddon) term.loadAddon(this);\n      else this.attach();\n    }\n  }\n\n  // xterm.js new plugin API:\n  activate(term) {\n    this.term = term;\n    this.attach();\n  }\n  dispose() {\n    this.detach();\n  }\n\n  /////////////////////////////////////////////////////////////////////////////\n  // User-Facing API\n  /////////////////////////////////////////////////////////////////////////////\n  \n  /**\n   *  Detach the controller from the terminal\n   */\n  detach() {\n    if (this.term.off) {\n      this.term.off(\"data\", this._handleTermData);\n      this.term.off(\"resize\", this._handleTermResize);\n    } else {\n      this._disposables.forEach(d => d.dispose());\n      this._disposables = [];\n    }\n  }\n  \n  /**\n   * Attach controller to the terminal, handling events\n   */\n  attach() {\n    if (this.term.on) {\n      this.term.on(\"data\", this._handleTermData);\n      this.term.on(\"resize\", this._handleTermResize);\n    } else {\n      this._disposables.push(this.term.onData(this._handleTermData));\n      this._disposables.push(this.term.onResize(this._handleTermResize));\n    }\n    this._termSize = {\n      cols: this.term.cols,\n      rows: this.term.rows,\n    };\n  }\n\n  /**\n   * Register a handler that will be called to satisfy auto-completion\n   */\n  addAutocompleteHandler(fn, ...args) {\n    this._autocompleteHandlers.push({\n      fn,\n      args\n    });\n  }\n\n  /**\n   * Remove a previously registered auto-complete handler\n   */\n  removeAutocompleteHandler(fn) {\n    const idx = this._autocompleteHandlers.findIndex(e => e.fn === fn);\n    if (idx === -1) return;\n\n    this._autocompleteHandlers.splice(idx, 1);\n  }\n\n  /**\n   * Return a promise that will resolve when the user has completed\n   * typing a single line\n   */\n  read(prompt, continuationPrompt = \"> \") {\n    return new Promise((resolve, reject) => {\n      this.term.write(prompt);\n      this._activePrompt = {\n        prompt,\n        continuationPrompt,\n        resolve,\n        reject\n      };\n\n      this._input = \"\";\n      this._cursor = 0;\n      this._active = true;\n    });\n  }\n\n  /**\n   * Return a promise that will be resolved when the user types a single\n   * character.\n   *\n   * This can be active in addition to `.read()` and will be resolved in\n   * priority before it.\n   */\n  readChar(prompt) {\n    return new Promise((resolve, reject) => {\n      this.term.write(prompt);\n      this._activeCharPrompt = {\n        prompt,\n        resolve,\n        reject\n      };\n    });\n  }\n\n  /**\n   * Abort a pending read operation\n   */\n  abortRead(reason = \"aborted\") {\n    if (this._activePrompt != null || this._activeCharPrompt != null) {\n      this.term.write(\"\\r\\n\");\n    }\n    if (this._activePrompt != null) {\n      this._activePrompt.reject(reason);\n      this._activePrompt = null;\n    }\n    if (this._activeCharPrompt != null) {\n      this._activeCharPrompt.reject(reason);\n      this._activeCharPrompt = null;\n    }\n    this._active = false;\n  }\n\n  /**\n   * Prints a message and changes line\n   */\n  println(message) {\n    this.print(message + \"\\n\");\n  }\n\n  /**\n   * Prints a message and properly handles new-lines\n   */\n  print(message) {\n    const normInput = message.replace(/[\\r\\n]+/g, \"\\n\");\n    this.term.write(normInput.replace(/\\n/g, \"\\r\\n\"));\n  }\n\n  /**\n   * Prints a list of items using a wide-format\n   */\n  printWide(items, padding = 2) {\n    if (items.length == 0) return println(\"\");\n\n    // Compute item sizes and matrix row/cols\n    const itemWidth =\n      items.reduce((width, item) => Math.max(width, item.length), 0) + padding;\n    const wideCols = Math.floor(this._termSize.cols / itemWidth);\n    const wideRows = Math.ceil(items.length / wideCols);\n\n    // Print matrix\n    let i = 0;\n    for (let row = 0; row < wideRows; ++row) {\n      let rowStr = \"\";\n\n      // Prepare columns\n      for (let col = 0; col < wideCols; ++col) {\n        if (i < items.length) {\n          let item = items[i++];\n          item += \" \".repeat(itemWidth - item.length);\n          rowStr += item;\n        }\n      }\n      this.println(rowStr);\n    }\n  }\n\n  /////////////////////////////////////////////////////////////////////////////\n  // Internal API\n  /////////////////////////////////////////////////////////////////////////////\n\n  /**\n   * Apply prompts to the given input\n   */\n  applyPrompts(input) {\n    const prompt = (this._activePrompt || {}).prompt || \"\";\n    const continuationPrompt =\n      (this._activePrompt || {}).continuationPrompt || \"\";\n\n    return prompt + input.replace(/\\n/g, \"\\n\" + continuationPrompt);\n  }\n\n  /**\n   * Advances the `offset` as required in order to accompany the prompt\n   * additions to the input.\n   */\n  applyPromptOffset(input, offset) {\n    const newInput = this.applyPrompts(input.substr(0, offset));\n    return newInput.length;\n  }\n\n  /**\n   * Clears the current prompt\n   *\n   * This function will erase all the lines that display the current prompt\n   * and move the cursor in the beginning of the first line of the prompt.\n   */\n  clearInput() {\n    const currentPrompt = this.applyPrompts(this._input);\n\n    // Get the overall number of lines to clear\n    const allRows = countLines(currentPrompt, this._termSize.cols);\n\n    // Get the line we are currently in\n    const promptCursor = this.applyPromptOffset(this._input, this._cursor);\n    const { col, row } = offsetToColRow(\n      currentPrompt,\n      promptCursor,\n      this._termSize.cols\n    );\n\n    // First move on the last line\n    const moveRows = allRows - row - 1;\n    for (var i = 0; i < moveRows; ++i) this.term.write(\"\\x1B[E\");\n\n    // Clear current input line(s)\n    this.term.write(\"\\r\\x1B[K\");\n    for (var i = 1; i < allRows; ++i) this.term.write(\"\\x1B[F\\x1B[K\");\n  }\n\n  /**\n   * Replace input with the new input given\n   *\n   * This function clears all the lines that the current input occupies and\n   * then replaces them with the new input.\n   */\n  setInput(newInput, clearInput = true) {\n    // Clear current input\n    if (clearInput) this.clearInput();\n\n    // Write the new input lines, including the current prompt\n    const newPrompt = this.applyPrompts(newInput);\n    this.print(newPrompt);\n\n    // Trim cursor overflow\n    if (this._cursor > newInput.length) {\n      this._cursor = newInput.length;\n    }\n\n    // Move the cursor to the appropriate row/col\n    const newCursor = this.applyPromptOffset(newInput, this._cursor);\n    const newLines = countLines(newPrompt, this._termSize.cols);\n    const { col, row } = offsetToColRow(\n      newPrompt,\n      newCursor,\n      this._termSize.cols\n    );\n    const moveUpRows = newLines - row - 1;\n\n    this.term.write(\"\\r\");\n    for (var i = 0; i < moveUpRows; ++i) this.term.write(\"\\x1B[F\");\n    for (var i = 0; i < col; ++i) this.term.write(\"\\x1B[C\");\n\n    // Replace input\n    this._input = newInput;\n  }\n\n  /**\n   * This function completes the current input, calls the given callback\n   * and then re-displays the prompt.\n   */\n  printAndRestartPrompt(callback) {\n    const cursor = this._cursor;\n\n    // Complete input\n    this.setCursor(this._input.length);\n    this.term.write(\"\\r\\n\");\n\n    // Prepare a function that will resume prompt\n    const resume = () => {\n      this._cursor = cursor;\n      this.setInput(this._input);\n    };\n\n    // Call the given callback to echo something, and if there is a promise\n    // returned, wait for the resolution before resuming prompt.\n    const ret = callback();\n    if (ret == null) {\n      resume();\n    } else {\n      ret.then(resume);\n    }\n  }\n\n  /**\n   * Set the new cursor position, as an offset on the input string\n   *\n   * This function:\n   * - Calculates the previous and current\n   */\n  setCursor(newCursor) {\n    if (newCursor < 0) newCursor = 0;\n    if (newCursor > this._input.length) newCursor = this._input.length;\n\n    // Apply prompt formatting to get the visual status of the display\n    const inputWithPrompt = this.applyPrompts(this._input);\n    const inputLines = countLines(inputWithPrompt, this._termSize.cols);\n\n    // Estimate previous cursor position\n    const prevPromptOffset = this.applyPromptOffset(this._input, this._cursor);\n    const { col: prevCol, row: prevRow } = offsetToColRow(\n      inputWithPrompt,\n      prevPromptOffset,\n      this._termSize.cols\n    );\n\n    // Estimate next cursor position\n    const newPromptOffset = this.applyPromptOffset(this._input, newCursor);\n    const { col: newCol, row: newRow } = offsetToColRow(\n      inputWithPrompt,\n      newPromptOffset,\n      this._termSize.cols\n    );\n\n    // Adjust vertically\n    if (newRow > prevRow) {\n      for (let i = prevRow; i < newRow; ++i) this.term.write(\"\\x1B[B\");\n    } else {\n      for (let i = newRow; i < prevRow; ++i) this.term.write(\"\\x1B[A\");\n    }\n\n    // Adjust horizontally\n    if (newCol > prevCol) {\n      for (let i = prevCol; i < newCol; ++i) this.term.write(\"\\x1B[C\");\n    } else {\n      for (let i = newCol; i < prevCol; ++i) this.term.write(\"\\x1B[D\");\n    }\n\n    // Set new offset\n    this._cursor = newCursor;\n  }\n\n  /**\n   * Move cursor at given direction\n   */\n  handleCursorMove(dir) {\n    if (dir > 0) {\n      const num = Math.min(dir, this._input.length - this._cursor);\n      this.setCursor(this._cursor + num);\n    } else if (dir < 0) {\n      const num = Math.max(dir, -this._cursor);\n      this.setCursor(this._cursor + num);\n    }\n  }\n\n  /**\n   * Erase a character at cursor location\n   */\n  handleCursorErase(backspace) {\n    const { _cursor, _input } = this;\n    if (backspace) {\n      if (_cursor <= 0) return;\n      const newInput = _input.substr(0, _cursor - 1) + _input.substr(_cursor);\n      this.clearInput();\n      this._cursor -= 1;\n      this.setInput(newInput, false);\n    } else {\n      const newInput = _input.substr(0, _cursor) + _input.substr(_cursor + 1);\n      this.setInput(newInput);\n    }\n  }\n\n  /**\n   * Insert character at cursor location\n   */\n  handleCursorInsert(data) {\n    const { _cursor, _input } = this;\n    const newInput = _input.substr(0, _cursor) + data + _input.substr(_cursor);\n    this._cursor += data.length;\n    this.setInput(newInput);\n  }\n\n  /**\n   * Handle input completion\n   */\n  handleReadComplete() {\n    if (this.history) {\n      this.history.push(this._input);\n    }\n    if (this._activePrompt) {\n      this._activePrompt.resolve(this._input);\n      this._activePrompt = null;\n    }\n    this.term.write(\"\\r\\n\");\n    this._active = false;\n  }\n\n  /**\n   * Handle terminal resize\n   *\n   * This function clears the prompt using the previous configuration,\n   * updates the cached terminal size information and then re-renders the\n   * input. This leads (most of the times) into a better formatted input.\n   */\n  handleTermResize(data) {\n    const { rows, cols } = data;\n    this.clearInput();\n    this._termSize = { cols, rows };\n    this.setInput(this._input, false);\n  }\n\n  /**\n   * Handle terminal input\n   */\n  handleTermData(data) {\n    if (!this._active) return;\n\n    // If we have an active character prompt, satisfy it in priority\n    if (this._activeCharPrompt != null) {\n      this._activeCharPrompt.resolve(data);\n      this._activeCharPrompt = null;\n      this.term.write(\"\\r\\n\");\n      return;\n    }\n\n    // If this looks like a pasted input, expand it\n    if (data.length > 3 && data.charCodeAt(0) !== 0x1b) {\n      const normData = data.replace(/[\\r\\n]+/g, \"\\r\");\n      Array.from(normData).forEach(c => this.handleData(c));\n    } else {\n      this.handleData(data);\n    }\n  }\n\n  /**\n   * Handle a single piece of information from the terminal.\n   */\n  handleData(data) {\n    if (!this._active) return;\n    const ord = data.charCodeAt(0);\n    let ofs;\n\n    // Handle ANSI escape sequences\n    if (ord == 0x1b) {\n      switch (data.substr(1)) {\n        case \"[A\": // Up arrow\n          if (this.history) {\n            let value = this.history.getPrevious();\n            if (value) {\n              this.setInput(value);\n              this.setCursor(value.length);\n            }\n          }\n          break;\n\n        case \"[B\": // Down arrow\n          if (this.history) {\n            let value = this.history.getNext();\n            if (!value) value = \"\";\n            this.setInput(value);\n            this.setCursor(value.length);\n          }\n          break;\n\n        case \"[D\": // Left Arrow\n          this.handleCursorMove(-1);\n          break;\n\n        case \"[C\": // Right Arrow\n          this.handleCursorMove(1);\n          break;\n\n        case \"[3~\": // Delete\n          this.handleCursorErase(false);\n          break;\n\n        case \"[F\": // End\n          this.setCursor(this._input.length);\n          break;\n\n        case \"[H\": // Home\n          this.setCursor(0);\n          break;\n\n        case \"b\": // ALT + LEFT\n          ofs = closestLeftBoundary(this._input, this._cursor);\n          if (ofs != null) this.setCursor(ofs);\n          break;\n\n        case \"f\": // ALT + RIGHT\n          ofs = closestRightBoundary(this._input, this._cursor);\n          if (ofs != null) this.setCursor(ofs);\n          break;\n\n        case \"\\x7F\": // CTRL + BACKSPACE\n          ofs = closestLeftBoundary(this._input, this._cursor);\n          if (ofs != null) {\n            this.setInput(\n              this._input.substr(0, ofs) + this._input.substr(this._cursor)\n            );\n            this.setCursor(ofs);\n          }\n          break;\n      }\n\n      // Handle special characters\n    } else if (ord < 32 || ord === 0x7f) {\n      switch (data) {\n        case \"\\r\": // ENTER\n          if (isIncompleteInput(this._input)) {\n            this.handleCursorInsert(\"\\n\");\n          } else {\n            this.handleReadComplete();\n          }\n          break;\n\n        case \"\\x7F\": // BACKSPACE\n          this.handleCursorErase(true);\n          break;\n\n        case \"\\t\": // TAB\n          if (this._autocompleteHandlers.length > 0) {\n            const inputFragment = this._input.substr(0, this._cursor);\n            const hasTailingSpace = hasTailingWhitespace(inputFragment);\n            const candidates = collectAutocompleteCandidates(\n              this._autocompleteHandlers,\n              inputFragment\n            );\n\n            // Sort candidates\n            candidates.sort();\n\n            // Depending on the number of candidates, we are handing them in\n            // a different way.\n            if (candidates.length === 0) {\n              // No candidates? Just add a space if there is none already\n              if (!hasTailingSpace) {\n                this.handleCursorInsert(\" \");\n              }\n            } else if (candidates.length === 1) {\n              // Just a single candidate? Complete\n              const lastToken = getLastToken(inputFragment);\n              this.handleCursorInsert(\n                candidates[0].substr(lastToken.length) + \" \"\n              );\n            } else if (candidates.length <= this.maxAutocompleteEntries) {\n\n              // search for a shared fragement\n              const sameFragment = getSharedFragment(inputFragment, candidates);\n              \n              // if there's a shared fragement between the candidates\n              // print complete the shared fragment\n              if (sameFragment) {\n                const lastToken = getLastToken(inputFragment);\n                this.handleCursorInsert(\n                  sameFragment.substr(lastToken.length)\n                );\n              }\n\n              // If we are less than maximum auto-complete candidates, print\n              // them to the user and re-start prompt\n              this.printAndRestartPrompt(() => {\n                this.printWide(candidates);\n              });\n            } else {\n              // If we have more than maximum auto-complete candidates, print\n              // them only if the user acknowledges a warning\n              this.printAndRestartPrompt(() =>\n                this.readChar(\n                  `Display all ${candidates.length} possibilities? (y or n)`\n                ).then(yn => {\n                  if (yn == \"y\" || yn == \"Y\") {\n                    this.printWide(candidates);\n                  }\n                })\n              );\n            }\n          } else {\n            this.handleCursorInsert(\"    \");\n          }\n          break;\n\n        case \"\\x03\": // CTRL+C\n          this.setCursor(this._input.length);\n          this.term.write(\"^C\\r\\n\" + ((this._activePrompt || {}).prompt || \"\"));\n          this._input = \"\";\n          this._cursor = 0;\n          if (this.history) this.history.rewind();\n          break;\n      }\n\n      // Handle visible characters\n    } else {\n      this.handleCursorInsert(data);\n    }\n  }\n}\n","import { parse } from \"shell-quote\";\n\n/**\n * Detects all the word boundaries on the given input\n */\nexport function wordBoundaries(input, leftSide = true) {\n  let match;\n  const words = [];\n  const rx = /\\w+/g;\n\n  while ((match = rx.exec(input))) {\n    if (leftSide) {\n      words.push(match.index);\n    } else {\n      words.push(match.index + match[0].length);\n    }\n  }\n\n  return words;\n}\n\n/**\n * The closest left (or right) word boundary of the given input at the\n * given offset.\n */\nexport function closestLeftBoundary(input, offset) {\n  const found = wordBoundaries(input, true)\n    .reverse()\n    .find(x => x < offset);\n  return found == null ? 0 : found;\n}\nexport function closestRightBoundary(input, offset) {\n  const found = wordBoundaries(input, false).find(x => x > offset);\n  return found == null ? input.length : found;\n}\n\n/**\n * Convert offset at the given input to col/row location\n *\n * This function is not optimized and practically emulates via brute-force\n * the navigation on the terminal, wrapping when they reach the column width.\n */\nexport function offsetToColRow(input, offset, maxCols) {\n  let row = 0,\n    col = 0;\n\n  for (let i = 0; i < offset; ++i) {\n    const chr = input.charAt(i);\n    if (chr == \"\\n\") {\n      col = 0;\n      row += 1;\n    } else {\n      col += 1;\n      if (col > maxCols) {\n        col = 0;\n        row += 1;\n      }\n    }\n  }\n\n  return { row, col };\n}\n\n/**\n * Counts the lines in the given input\n */\nexport function countLines(input, maxCols) {\n  return offsetToColRow(input, input.length, maxCols).row + 1;\n}\n\n/**\n * Checks if there is an incomplete input\n *\n * An incomplete input is considered:\n * - An input that contains unterminated single quotes\n * - An input that contains unterminated double quotes\n * - An input that ends with \"\\\"\n * - An input that has an incomplete boolean shell expression (&& and ||)\n * - An incomplete pipe expression (|)\n */\nexport function isIncompleteInput(input) {\n  // Empty input is not incomplete\n  if (input.trim() == \"\") {\n    return false;\n  }\n\n  // Check for dangling single-quote strings\n  if ((input.match(/'/g) || []).length % 2 !== 0) {\n    return true;\n  }\n  // Check for dangling double-quote strings\n  if ((input.match(/\"/g) || []).length % 2 !== 0) {\n    return true;\n  }\n  // Check for dangling boolean or pipe operations\n  if (\n    input\n      .split(/(\\|\\||\\||&&)/g)\n      .pop()\n      .trim() == \"\"\n  ) {\n    return true;\n  }\n  // Check for tailing slash\n  if (input.endsWith(\"\\\\\") && !input.endsWith(\"\\\\\\\\\")) {\n    return true;\n  }\n\n  return false;\n}\n\n/**\n * Returns true if the expression ends on a tailing whitespace\n */\nexport function hasTailingWhitespace(input) {\n  return input.match(/[^\\\\][ \\t]$/m) != null;\n}\n\n/**\n * Returns the last expression in the given input\n */\nexport function getLastToken(input) {\n  // Empty expressions\n  if (input.trim() === \"\") return \"\";\n  if (hasTailingWhitespace(input)) return \"\";\n\n  // Last token\n  const tokens = parse(input);\n  return tokens.pop() || \"\";\n}\n\n/**\n * Returns the auto-complete candidates for the given input\n */\nexport function collectAutocompleteCandidates(callbacks, input) {\n  const tokens = parse(input);\n  let index = tokens.length - 1;\n  let expr = tokens[index] || \"\";\n\n  // Empty expressions\n  if (input.trim() === \"\") {\n    index = 0;\n    expr = \"\";\n  } else if (hasTailingWhitespace(input)) {\n    // Expressions with danging space\n    index += 1;\n    expr = \"\";\n  }\n\n  // Collect all auto-complete candidates from the callbacks\n  const all = callbacks.reduce((candidates, { fn, args }) => {\n    try {\n      return candidates.concat(fn(index, tokens, ...args));\n    } catch (e) {\n      console.error(\"Auto-complete error:\", e);\n      return candidates;\n    }\n  }, []);\n\n  // Filter only the ones starting with the expression\n  return all.filter(txt => txt.startsWith(expr));\n}\n\n\nexport function getSharedFragment(fragment, candidates) {\n\n  // end loop when fragment length = first candidate length\n  if (fragment.length >= candidates[0].length) return fragment;\n  \n  // save old fragemnt\n  const oldFragment = fragment;\n  \n  // get new fragment\n  fragment += candidates[0].slice(fragment.length, fragment.length+1);\n\n  for (let i=0; i<candidates.length; i++ ) {\n\n    // return null when there's a wrong candidate\n    if (!candidates[i].startsWith(oldFragment)) return null;\n\n    if (!candidates[i].startsWith(fragment)) {\n      return oldFragment;\n    }\n  }\n\n  return getSharedFragment(fragment, candidates);\n}\n","exports.quote = function (xs) {\n    return xs.map(function (s) {\n        if (s && typeof s === 'object') {\n            return s.op.replace(/(.)/g, '\\\\$1');\n        }\n        else if (/[\"\\s]/.test(s) && !/'/.test(s)) {\n            return \"'\" + s.replace(/(['\\\\])/g, '\\\\$1') + \"'\";\n        }\n        else if (/[\"'\\s]/.test(s)) {\n            return '\"' + s.replace(/([\"\\\\$`!])/g, '\\\\$1') + '\"';\n        }\n        else {\n            return String(s).replace(/([A-z]:)?([#!\"$&'()*,:;<=>?@\\[\\\\\\]^`{|}])/g, '$1\\\\$2');\n        }\n    }).join(' ');\n};\n\n// '<(' is process substitution operator and\n// can be parsed the same as control operator\nvar CONTROL = '(?:' + [\n    '\\\\|\\\\|', '\\\\&\\\\&', ';;', '\\\\|\\\\&', '\\\\<\\\\(', '>>', '>\\\\&', '[&;()|<>]'\n].join('|') + ')';\nvar META = '|&;()<> \\\\t';\nvar BAREWORD = '(\\\\\\\\[\\'\"' + META + ']|[^\\\\s\\'\"' + META + '])+';\nvar SINGLE_QUOTE = '\"((\\\\\\\\\"|[^\"])*?)\"';\nvar DOUBLE_QUOTE = '\\'((\\\\\\\\\\'|[^\\'])*?)\\'';\n\nvar TOKEN = '';\nfor (var i = 0; i < 4; i++) {\n    TOKEN += (Math.pow(16,8)*Math.random()).toString(16);\n}\n\nexports.parse = function (s, env, opts) {\n    var mapped = parse(s, env, opts);\n    if (typeof env !== 'function') return mapped;\n    return mapped.reduce(function (acc, s) {\n        if (typeof s === 'object') return acc.concat(s);\n        var xs = s.split(RegExp('(' + TOKEN + '.*?' + TOKEN + ')', 'g'));\n        if (xs.length === 1) return acc.concat(xs[0]);\n        return acc.concat(xs.filter(Boolean).map(function (x) {\n            if (RegExp('^' + TOKEN).test(x)) {\n                return JSON.parse(x.split(TOKEN)[1]);\n            }\n            else return x;\n        }));\n    }, []);\n};\n\nfunction parse (s, env, opts) {\n    var chunker = new RegExp([\n        '(' + CONTROL + ')', // control chars\n        '(' + BAREWORD + '|' + SINGLE_QUOTE + '|' + DOUBLE_QUOTE + ')*'\n    ].join('|'), 'g');\n    var match = s.match(chunker).filter(Boolean);\n    var commented = false;\n\n    if (!match) return [];\n    if (!env) env = {};\n    if (!opts) opts = {};\n    return match.map(function (s, j) {\n        if (commented) {\n            return;\n        }\n        if (RegExp('^' + CONTROL + '$').test(s)) {\n            return { op: s };\n        }\n\n        // Hand-written scanner/parser for Bash quoting rules:\n        //\n        //  1. inside single quotes, all characters are printed literally.\n        //  2. inside double quotes, all characters are printed literally\n        //     except variables prefixed by '$' and backslashes followed by\n        //     either a double quote or another backslash.\n        //  3. outside of any quotes, backslashes are treated as escape\n        //     characters and not printed (unless they are themselves escaped)\n        //  4. quote context can switch mid-token if there is no whitespace\n        //     between the two quote contexts (e.g. all'one'\"token\" parses as\n        //     \"allonetoken\")\n        var SQ = \"'\";\n        var DQ = '\"';\n        var DS = '$';\n        var BS = opts.escape || '\\\\';\n        var quote = false;\n        var esc = false;\n        var out = '';\n        var isGlob = false;\n\n        for (var i = 0, len = s.length; i < len; i++) {\n            var c = s.charAt(i);\n            isGlob = isGlob || (!quote && (c === '*' || c === '?'));\n            if (esc) {\n                out += c;\n                esc = false;\n            }\n            else if (quote) {\n                if (c === quote) {\n                    quote = false;\n                }\n                else if (quote == SQ) {\n                    out += c;\n                }\n                else { // Double quote\n                    if (c === BS) {\n                        i += 1;\n                        c = s.charAt(i);\n                        if (c === DQ || c === BS || c === DS) {\n                            out += c;\n                        } else {\n                            out += BS + c;\n                        }\n                    }\n                    else if (c === DS) {\n                        out += parseEnvVar();\n                    }\n                    else {\n                        out += c;\n                    }\n                }\n            }\n            else if (c === DQ || c === SQ) {\n                quote = c;\n            }\n            else if (RegExp('^' + CONTROL + '$').test(c)) {\n                return { op: s };\n            }\n            else if (RegExp('^#$').test(c)) {\n                commented = true;\n                if (out.length){\n                    return [out, { comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n                }\n                return [{ comment: s.slice(i+1) + match.slice(j+1).join(' ') }];\n            }\n            else if (c === BS) {\n                esc = true;\n            }\n            else if (c === DS) {\n                out += parseEnvVar();\n            }\n            else out += c;\n        }\n\n        if (isGlob) return {op: 'glob', pattern: out};\n\n        return out;\n\n        function parseEnvVar() {\n            i += 1;\n            var varend, varname;\n            //debugger\n            if (s.charAt(i) === '{') {\n                i += 1;\n                if (s.charAt(i) === '}') {\n                    throw new Error(\"Bad substitution: \" + s.substr(i - 2, 3));\n                }\n                varend = s.indexOf('}', i);\n                if (varend < 0) {\n                    throw new Error(\"Bad substitution: \" + s.substr(i));\n                }\n                varname = s.substr(i, varend - i);\n                i = varend;\n            }\n            else if (/[*@#?$!_\\-]/.test(s.charAt(i))) {\n                varname = s.charAt(i);\n                i += 1;\n            }\n            else {\n                varend = s.substr(i).match(/[^\\w\\d_]/);\n                if (!varend) {\n                    varname = s.substr(i);\n                    i = s.length;\n                } else {\n                    varname = s.substr(i, varend.index);\n                    i += varend.index - 1;\n                }\n            }\n            return getVar(null, '', varname);\n        }\n    })\n    // finalize parsed aruments\n    .reduce(function(prev, arg){\n        if (arg === undefined){\n            return prev;\n        }\n        return prev.concat(arg);\n    },[]);\n\n    function getVar (_, pre, key) {\n        var r = typeof env === 'function' ? env(key) : env[key];\n        if (r === undefined && key != '')\n            r = '';\n        else if (r === undefined)\n            r = '$';\n\n        if (typeof r === 'object') {\n            return pre + TOKEN + JSON.stringify(r) + TOKEN;\n        }\n        else return pre + r;\n    }\n}\n"],"sourceRoot":""}